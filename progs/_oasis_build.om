BUILD_TARGETS[] =
BUILD_DOC_TARGETS[] =
ENABLE_SYNTAX_CAMLP4O = $"false"
DEFINE_RULES[] =

section
    if $(not $(defined SKIP_BUILD_unittests))
        SKIP_BUILD_unittests = false
        export SKIP_BUILD_unittests
    if $(not $(SKIP_BUILD_unittests))
        NAME = $"unittests"
        NATIVE_ENABLED = $"false"
        MAIN_MODULE = $"Unittests"
        OCAMLPACKS[] =
            $"str"
            $(OASIS_getvar EXTRA_OCAMLPACKS)
        OCAML_LIBS[] =
            $"../src/testing/testing"
            $"../src/functorpack/FPack"
            $(OASIS_getvar EXTRA_OCAML_LIBS)
        C_SOURCES[] =
        C_OBJECTS = $(replacesuffixes .c, $(EXT_OBJ), $(C_SOURCES))
        C_OBJECTS += $(OASIS_getvar EXTRA_C_OBJECTS)
        if true
            OCAML_LINK_CCLIB[] =
            export OCAML_LINK_CCLIB
        OCAML_LINK_CCLIB[] +=
            $(OASIS_getvar EXTRA_OCAML_LINK_CCLIB)
        if true
            OCAML_LINK_DLLIB[] =
            export OCAML_LINK_DLLIB
        OCAML_LINK_DLLIB[] +=
            $(OASIS_getvar EXTRA_OCAML_LINK_DLLIB)
        if true
            OCAML_LINK_DLLPATH[] =
            export OCAML_LINK_DLLPATH
        OCAML_LINK_DLLPATH[] +=
            $(OASIS_getvar EXTRA_OCAML_LINK_DLLPATH)
        OCAML_LINK_FLAGS[] =
            $"-linkpkg"
            $(OASIS_getvar EXTRA_OCAML_LINK_FLAGS)
        OCAMLFINDFLAGS[] =
            $(OASIS_getvar EXTRA_OCAMLFINDFLAGS)
        if true
            cflags[] =
            export cflags
        if true
            ocamlcflags[] =
            export ocamlcflags
        if true
            ocamloptflags[] =
            export ocamloptflags
        OCAMLCFLAGS += $(ocamlcflags)
        OCAMLOPTFLAGS += $(ocamloptflags)
        DefineRules() =
            OASIS_build_OCamlExecutable($(NAME), $(MAIN_MODULE), $(C_OBJECTS))
        if true
            BUILD_TARGETS[] +=
                $(OASIS_target_OCamlExecutable $(NAME))
            export BUILD_TARGETS
        DEFINE_RULES[] +=
            $(DefineRules)
        OASIS_clean_list[] +=
            $(NAME)
            $(NAME).run
            $(NAME).opt
        export BUILD_TARGETS DEFINE_RULES OASIS_clean_list
    export


DefineBuildRules() =
    OASIS_run($(DEFINE_RULES))
OCAMLINCLUDES = .
if true
    CFLAGS[] +=
    export CFLAGS
if true
    OCAMLCFLAGS[] +=
    export OCAMLCFLAGS
if true
    OCAMLOPTFLAGS[] +=
    export OCAMLOPTFLAGS
OCAMLINCLUDES[] +=
    $"../src/functorpack"
    $"../src/testing"
    $(OASIS_getvar_for unittests, EXTRA_OCAMLINCLUDES)
OCAMLPACKS[] +=
    $(OASIS_getvar_for unittests, EXTRA_OCAMLPACKS)
if $(ENABLE_SYNTAX_CAMLP4O)
    OCAMLFINDFLAGS += -syntax camlp4o
    export OCAMLFINDFLAGS

