BUILD_TARGETS[] =
BUILD_DOC_TARGETS[] =
ENABLE_SYNTAX_CAMLP4O = $"false"
DEFINE_RULES[] =

section
    if $(not $(defined SKIP_BUILD_testing))
        SKIP_BUILD_testing = false
        export SKIP_BUILD_testing
    if $(not $(SKIP_BUILD_testing))
        NAME = $"testing"
        CNAME = $"Testing"
        MODULES[] =
            $"T_frame"
            $(OASIS_getvar EXTRA_MODULES)
        MODULES_testing[] =
            $(MODULES)
        OCAML_LIBS[] =
            $(OASIS_getvar EXTRA_OCAML_LIBS)
        C_SOURCES[] =
        C_OBJECTS = $(replacesuffixes .c, $(EXT_OBJ), $(C_SOURCES))
        C_OBJECTS += $(OASIS_getvar EXTRA_C_OBJECTS)
        C_SOURCES_testing[] =
            $(C_SOURCES)
        if true
            OCAML_LIB_CCLIB[] =
            export OCAML_LIB_CCLIB
        OCAML_LIB_CCLIB[] +=
            $(OASIS_getvar EXTRA_OCAML_LIB_CCLIB)
        if true
            OCAML_LIB_DLLIB[] =
            export OCAML_LIB_DLLIB
        OCAML_LIB_DLLIB[] +=
            $(OASIS_getvar EXTRA_OCAML_LIB_DLLIB)
        if true
            OCAML_LIB_DLLPATH[] =
            export OCAML_LIB_DLLPATH
        OCAML_LIB_DLLPATH[] +=
            $(OASIS_getvar EXTRA_OCAML_LIB_DLLPATH)
        OCAML_LIB_FLAGS[] =
            $(OASIS_getvar EXTRA_OCAML_LIB_FLAGS)
        OCAMLFINDFLAGS[] =
            $(OASIS_getvar EXTRA_OCAMLFINDFLAGS)
        if true
            cflags[] =
            export cflags
        if true
            ocamlcflags[] =
            export ocamlcflags
        if true
            ocamloptflags[] =
            export ocamloptflags
        OCAMLCFLAGS += $(ocamlcflags)
        OCAMLOPTFLAGS += $(ocamloptflags)
        OCAMLINCLUDES[] +=
            $(OASIS_getvar_for testing, EXTRA_OCAMLINCLUDES)
        OCAMLPACKS[] +=
            $"str"
            $(OASIS_getvar_for testing, EXTRA_OCAMLPACKS)
        DefineRules() =
            OASIS_build_OCamlLibrary($(NAME), $(MODULES), $(C_OBJECTS))
        if true
            BUILD_TARGETS[] +=
                $(OASIS_target_OCamlLibrary $(NAME))
            export BUILD_TARGETS
        DEFINE_RULES[] +=
            $(DefineRules)
        export BUILD_TARGETS DEFINE_RULES MODULES_testing C_SOURCES_testing
    export


DefineBuildRules() =
    OASIS_run($(DEFINE_RULES))
OCAMLINCLUDES = .
if true
    CFLAGS[] +=
    export CFLAGS
if true
    OCAMLCFLAGS[] +=
    export OCAMLCFLAGS
if true
    OCAMLOPTFLAGS[] +=
    export OCAMLOPTFLAGS
OCAMLINCLUDES[] +=
    $(OASIS_getvar_for testing, EXTRA_OCAMLINCLUDES)
OCAMLPACKS[] +=
    $"str"
    $(OASIS_getvar_for testing, EXTRA_OCAMLPACKS)
if $(ENABLE_SYNTAX_CAMLP4O)
    OCAMLFINDFLAGS += -syntax camlp4o
    export OCAMLFINDFLAGS

